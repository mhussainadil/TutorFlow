<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" href=
    "/uploads/tutorflow-img.webp"
            type="image/x-icon"  class="rounded-full"/>
    <title>Manage Faculty - TutorFlow</title>
    <!-- <script src="https://cdn.tailwindcss.com"></script> -->
    <link href="/css/output.css" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

    <style>
        /* Custom Color Scheme */
        :root {
            --primary: #4F46E5;    /* Indigo */
            --secondary: #6D28D9;  /* Purple */
            --accent: #EC4899;     /* Pink */
            --dark: #1E293B;       /* Dark Slate */
            --light: #F8FAFC;      /* Light Gray */
        }

        /* Sidebar Animation */
        .sidebar {
            transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            transform: translateX(0);
        }

        .sidebar-hidden {
            transform: translateX(-100%);
        }

        @media (min-width: 768px) {
            .sidebar {
                transform: translateX(0) !important;
            }
        }

        /* Modal Animation */
        .modal-enter {
            animation: modalEnter 0.3s ease-out;
        }

        @keyframes modalEnter {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body class="bg-gray-50">
    <!-- Header -->
    <!-- <header class="bg-indigo-50 shadow-sm fixed w-full top-0 z-50">
        <nav class="px-6 h-16 flex items-center justify-between">
            <div class="flex items-center space-x-4">
      
                <button id="sidebarToggle" class="md:hidden text-indigo-600">
                    <i class="fas fa-bars text-xl"></i>
                </button>
                <h1 class="text-2xl font-bold text-indigo-800">TutorFlow Admin</h1>
            </div>
            
            <div class="flex items-center space-x-4 relative">
                <div class="relative group">
                    <button class="flex items-center space-x-2">
                        <div class="w-8 h-8 rounded-full bg-indigo-100 text-indigo-600 flex items-center justify-center ring-2 ring-indigo-100">
                            <i class="fas fa-user"></i>
                        </div>
                    </button>
                    <div class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 hidden group-hover:block border border-indigo-100">
                        <a href="#" class="block px-4 py-2 text-gray-700 hover:bg-indigo-50">
                            <i class="fas fa-cog mr-2 text-indigo-600"></i>Settings
                        </a>
                        <a href="/logout" class="block px-4 py-2 text-gray-700 hover:bg-indigo-50">
                            <i class="fas fa-sign-out-alt mr-2 text-indigo-600"></i>Logout
                        </a>
                    </div>
                </div>
            </div>
        </nav>
    </header> -->
    <header class="fixed top-0 left-0 right-0 h-16 bg-indigo-50 shadow-sm flex items-center justify-between px-6 z-50">
        <div class="flex items-center space-x-4">
            <!-- Mobile Menu Button -->
            <button id="sidebarToggle" class="text-indigo-600 lg:hidden">
                <i class="fas fa-bars text-xl"></i>
            </button>
            <div class="text-indigo-800 text-xl font-bold">TutorFlow Admin</div>
        </div>
        
        <!-- Profile Dropdown -->
        <div class="relative">
            <button id="profileBtn" class="w-10 h-10 rounded-full bg-indigo-100 flex items-center justify-center ring-2 ring-indigo-100">
                <i class="fas fa-user text-indigo-600"></i>
            </button>
            
            <div id="profileDropdown" class="hidden absolute right-0 top-12 bg-white rounded-lg shadow-lg w-48 py-2 border border-indigo-100">
                <a href="/ASettings" class="px-4 py-2 text-gray-700 hover:bg-indigo-50 flex items-center">
                    <i class="fas fa-cog mr-2 text-indigo-600"></i> Settings
                </a>
                <form action="/logout" method="POST" class="border-t border-indigo-100 mt-2">
                    <button type="submit" class="w-full text-left px-4 py-2 text-gray-700 hover:bg-indigo-50 flex items-center">
                        <i class="fas fa-sign-out-alt mr-2 text-indigo-600"></i> Logout
                    </button>
                </form>
            </div>
        </div>
    </header>
    <!-- Sidebar -->
    <aside class="sidebar fixed left-0 top-16 h-screen w-64 bg-gradient-to-b from-indigo-50 to-indigo-100 p-6 z-40 border-r border-indigo-200">
        <nav class="space-y-2">
            <a href="/adminHomepage" class="flex items-center text-indigo-800 p-3 rounded-lg hover:bg-indigo-50">
                <i class="fas fa-home mr-3 text-indigo-600"></i>
                Dashboard
            </a>
            <a href="/Mfaculty" class="flex items-center text-indigo-800 p-3 rounded-lg hover:bg-indigo-50">
                <i class="fas fa-chalkboard-teacher mr-3 text-indigo-600"></i>
                Manage Faculty
            </a>
            <a href="/Mstudents" class="flex items-center text-indigo-800 p-3 rounded-lg bg-indigo-100 border border-indigo-200">
                <i class="fas fa-users mr-3 text-indigo-600"></i>
                Manage Students
            </a>
        </nav>

        <!-- Bottom Settings/Logout -->
        <div class="absolute bottom-14 left-0 right-0 p-4 border-t border-indigo-200">
            <a href="/ASettings" class="flex items-center text-indigo-800 hover:bg-indigo-50 p-3 rounded-lg">
                <i class="fas fa-cog mr-3 text-indigo-600"></i>
                Settings
            </a>
            <form action="/logout" method="POST" class="w-full">
                <button type="submit" class="flex items-center text-indigo-800 hover:bg-indigo-50 p-3 rounded-lg w-full">
                    <i class="fas fa-sign-out-alt mr-3 text-indigo-600"></i>
                    Logout
                </button>
            </form>
        </div>
    </aside>

    <!-- Main Content -->
    <main class="ml-0 md:ml-64 mt-16 p-8 min-h-screen transition-all duration-300">
        <!-- Header Section -->
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-8 gap-4">
            <h2 class="text-2xl font-bold text-indigo-800">Manage Students</h2>
            <div class="flex items-center gap-4 w-full md:w-auto">
                <div class="relative flex-1">
                    <input type="text" id="searchInput" placeholder="Search students..." 
                        class="pl-10 pr-4 py-2 border border-indigo-200 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 w-full">
                    <i class="fas fa-search absolute left-3 top-3 text-indigo-600"></i>
                </div>
            </div>
        </div>

        <!-- Students List -->
        <div class="bg-white rounded-xl shadow-lg overflow-x-auto border border-indigo-100">
            <table class="w-full" >
                <thead class="bg-indigo-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-sm font-semibold text-indigo-800">Photo</th>
                        <th class="px-6 py-3 text-left text-sm font-semibold text-indigo-800">Name</th>
                        <th class="px-6 py-3 text-left text-sm font-semibold text-indigo-800">Department</th>
                        <th class="px-6 py-3 text-left text-sm font-semibold text-indigo-800">Roll No</th>
                        <th class="px-6 py-3 text-left text-sm font-semibold text-indigo-800">Actions</th>
                    </tr>
                </thead>
                <tbody   id="studentTableBody" class="divide-y divide-indigo-100">
                    <%for(let student of allstudents){%>
                    <tr class="hover:bg-indigo-50">
                        <td class="px-6 py-4">
                            <div class="w-10 h-10 rounded-full bg-indigo-100 flex items-center justify-center">
                                <img src="<%=student.profilePhoto%>" alt="">
                            </div>
                        </td>
                        <td class="px-6 py-4 text-gray-700"><%=student.fullName%></td>
                        <td class="px-6 py-4 text-gray-700"><%=student.department%></td>
                        <td class="px-6 py-4 text-gray-700"><%=student.rollNo%></td>
                        <td class="px-6 py-4 flex gap-2">
                            <button onclick="openDeleteStudentModal(`<%= student._id %>`, `<%= JSON.stringify(student.fullName) %>`)" 
                                class="text-red-500 hover:text-red-600">
                            <i class="fas fa-trash"></i>
                        </button>
                        </td>
                    </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </main>

    <script>
        // Sidebar Toggle
        const sidebar = document.querySelector('.sidebar');
        const sidebarToggle = document.getElementById('sidebarToggle');
        const mainContent = document.querySelector('main');

        sidebarToggle.addEventListener('click', () => {
            sidebar.classList.toggle('sidebar-hidden');
            mainContent.classList.toggle('ml-64');
        });

        // Modal Controls
        function openAddFacultyModal() {
            document.getElementById('addFacultyModal').classList.remove('hidden');
        }

        function closeAddFacultyModal() {
            document.getElementById('addFacultyModal').classList.add('hidden');
        }

        // Responsive Check
        function checkMobile() {
            if (window.innerWidth < 768) {
                sidebar.classList.add('sidebar-hidden');
                mainContent.classList.remove('ml-64');
            } else {
                sidebar.classList.remove('sidebar-hidden');
                mainContent.classList.add('ml-64');
            }
        }

        window.addEventListener('resize', checkMobile);
        checkMobile(); // Initial check


        document.getElementById("searchInput").addEventListener("input", async function () {
    let query = this.value.trim(); // Get search input

    if (query === "") {
        location.reload(); // Reset table when input is cleared
        return;
    }

    try {
        let response = await fetch(`/searchStudents?query=${query}`);
        let students = await response.json();

        // Update the table with new search results
        updateStudentTable(students);
    } catch (error) {
        console.error("Error fetching search results:", error);
    }
});

// Function to update table dynamically
function updateStudentTable(students) {
    let tbody = document.querySelector("tbody");
    tbody.innerHTML = ""; // Clear old data

    students.forEach(student => {
        let row = `<tr class="hover:bg-gray-50">
            <td class="px-6 py-4">
                <div class="w-10 h-10 rounded-full bg-indigo-100 flex items-center justify-center">
                    <img src="${student.profilePhoto}" alt="">
                </div>
            </td>
            <td class="px-6 py-4">${student.fullName}</td>
            <td class="px-6 py-4">${student.department}</td>
            <td class="px-6 py-4">${student.rollNo}</td>
            <td class="px-6 py-4 flex gap-2">
          
                <button onclick="openDeleteStudentModal('${student._id}', '${student.fullName.replace(/'/g, "\\'")}')" 
                class="text-red-500 hover:text-red-600">
                    <i class="fas fa-trash"></i>
                </button>
            </td>
        </tr>`;
        tbody.innerHTML += row;
    });
}



// Close sidebar on mobile when clicking outside
document.addEventListener('click', (e) => {
            if (window.innerWidth < 1024 && 
                !sidebar.contains(e.target) && 
                !sidebarToggle.contains(e.target)) {
                sidebar.classList.remove('sidebar-visible');
            }
        });

        
       // Close dropdown when clicking outside
       document.addEventListener('click', (e) => {
            if (!profileDropdown.contains(e.target)) {
                profileDropdown.classList.add('hidden');
            }
        });
        // Profile Dropdown
        const profileBtn = document.getElementById('profileBtn');
        const profileDropdown = document.getElementById('profileDropdown');
        
        profileBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            profileDropdown.classList.toggle('hidden');
        });
    </script>
    
<div id="deleteStudentModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50">
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white rounded-xl p-6 w-full max-w-md mx-4 border border-indigo-100">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-semibold text-indigo-800">Confirm Delete</h3>
                <button onclick="closeDeleteStudentModal()" class="text-indigo-600 hover:text-indigo-700">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <p id="deleteStudentMessage" class="text-gray-700 mb-6"></p>
            <div class="flex justify-end gap-3">
                <button onclick="closeDeleteStudentModal()" class="px-4 py-2 border rounded-lg hover:bg-gray-50">Cancel</button>
                <button id="confirmStudentDelete" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Delete Student Functionality
    let currentStudentDeleteId = null;

    function openDeleteStudentModal(id, name) {
        currentStudentDeleteId = id;
        document.getElementById('deleteStudentMessage').textContent = 
            `Are you sure you want to delete ${name}?`;
        document.getElementById('deleteStudentModal').classList.remove('hidden');
    }

    function closeDeleteStudentModal() {
        document.getElementById('deleteStudentModal').classList.add('hidden');
        currentStudentDeleteId = null;
    }

    document.getElementById('confirmStudentDelete').addEventListener('click', async () => {
        if (!currentStudentDeleteId) return;
        
        try {
            const response = await fetch(`/admin/students/${currentStudentDeleteId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            
            if (response.ok) {
                document.querySelector(`tr[data-student-id="${currentStudentDeleteId}"]`).remove();
                showNotification('Student deleted successfully', 'success');
            } else {
                showNotification('Failed to delete student', 'error');
            }
        } catch (error) {
            console.error('Error:', error);
            showNotification('Error deleting student', 'error');
        }
        closeDeleteStudentModal();
    });
</script>


<div id="notification" class="fixed top-4 right-4 p-4 rounded-lg shadow-lg hidden"></div>

<script>
    function showNotification(message, type = 'success') {
        const notification = document.getElementById('notification');
        notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg notification-${type}`;
        notification.textContent = message;
        notification.classList.remove('hidden');
        
        setTimeout(() => {
            notification.classList.add('hidden');
        }, 3000);
    }
</script>
</body>
</html>
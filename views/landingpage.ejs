<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <link rel="icon" href=
    "/uploads/tutorflow-img.webp"
            type="image/x-icon"  class="rounded-full"/>
    <title>TutorFlow</title>
  
     <!-- External CSS & Fonts -->
<!-- <link href="css/output.css" rel="stylesheet"> -->
   
     <link
  rel="stylesheet"
  href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"
/>

<link
  href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap"
  rel="stylesheet"
/>
<link
  href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
  rel="stylesheet"
/>
<link rel="stylesheet" href="css/bootstrap.min.css">

  <style>

    /* General Styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: "Inter", sans-serif;
      background-color: #f4f7f6;
      color: #333;
      overflow-x: hidden;
      
  opacity: 1 !important;
  /* transition: none !important; */
    }
    /* Dynamic Background */
    .dynamic-bg {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      /* background: linear-gradient(135deg, #ffffff, #5706d4);
       */
       background: linear-gradient(135deg,#000000,#b091de);
      animation: gradientShift 10s infinite alternate;
      background-size: 200% 200%;
    }
    @keyframes gradientShift {
      0% {
        background-position: 0% 50%;
      }
      100% {
        background-position: 100% 50%;
      }
    }

    /* Navigation Bar */
    .navbar {
      align-items: center;
      padding: 20px 10%;
      background-color:#6a11cb;
      color: #fff;
      
      top: 0;
      z-index: 1030;
      backdrop-filter: blur(10px);
    }
    .navbar .logo h1 {
      margin: 0;
      font-size: 24px;
      font-weight: 700;
      font-weight: 900;
      letter-spacing: 5px;
    }
    .navbar .nav-links {
      list-style: none;
      
      gap: 20px;
      margin: 0;
      padding: 0;
    }
    .navbar .nav-links a {
      color: #fff;
      text-decoration: none;
      font-weight: 500;
      padding: 10px 15px;
      transition: background-color 0.3s ease, color 0.3s ease;
    }
    .navbar .nav-links a:hover {
      background-color: #fff;
      color: #6a11cb;
      border-radius: 5px;
    }
    .navbar .auth-buttons .btn {
      margin-left: 10px;
      padding: 8px 16px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .navbar .auth-buttons .btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    .navbar .auth-buttons .login-btn {
      background-color: transparent;
      color: #fff;
      border: 1px solid #fff;
    }
    .navbar .auth-buttons .signup-btn {
      background-color: #fff;
      color: #6a11cb;
    }

    /* Hero Section */
    .hero {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 150px 10%;
      background-color: rgba(255, 255, 255, 0.9);
      animation: fadeIn 2s ease-in-out;
      position: relative;
      z-index: 1;
    }
    .hero-content {
      max-width: 50%;
    }
    /* .hero-content h1 {
      font-size: 48px;
      margin-bottom: 20px;
      color: #6a11cb;
      text-shadow: 0 0 0.25rem white;
      font-weight: 900;
    } */
    .hero-content h1 {
    font-size: 48px;
    margin-bottom: 20px;
    color: #fdfdfd;
    text-shadow: 2px 1px 0.25rem #000000;
    font-weight: 900;
}
    .hero-content p {
      font-size: 18px;
      margin-bottom: 30px;
      color: #b091de;
    }
    .hero-content .cta-btn {
      padding: 12px 24px;
      background-color: #6a11cb;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .hero-content .cta-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    .hero-image img {
      max-width: 100%;
      border-radius: 10px;
    }
    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    /* Features Section */
    .features {
      padding: 100px 10%;
      text-align: center;
      /* background-color: rgba(255, 255, 255, 0.9); */
      position: relative;
      z-index: 1;
    }
    .features h2 {
      font-size: 36px;
      margin-bottom: 40px;
      color: #6a11cb;
    }
    .feature-cards {
      display: flex;
      justify-content: space-around;
      flex-wrap: wrap;
      gap: 20px;
    }
    .card {
      background-color: #fff;
      padding: 20px;
      border-radius: 10px;
      width: 300px;
      /* initial hidden state */
      opacity: 0;
      transform: translateY(50px);
      transition: transform 0.6s ease, opacity 0.6s ease;
    }
    .card i {
      font-size: 40px;
      margin-bottom: 20px;
      color: #6a11cb;
    }
    .card h3 {
      font-size: 24px;
      margin-bottom: 10px;
      color: #b091de;
    }
    .card p {
      font-size: 16px;
      color: #ffffff;
    }
    /* Animate from different directions */
    .animate-from-left {
      transform: translateX(-50px);
    }
    .animate-from-right {
      transform: translateX(50px);
    }
    .animate-from-bottom {
      transform: translateY(80px);
    }
    .visible {
      opacity: 1;
      transform: translateX(0) translateY(0);
    }

    /* About Section */
    .about {
      padding: 100px 10%;
      text-align: center;
      background-color: rgba(255, 255, 255, 0.9);
      position: relative;
      z-index: 1;
    }
    .about h2 {
      font-size: 36px;
      margin-bottom: 20px;
      color: #6a11cb;
    }
    .about p {
      font-size: 18px;
      max-width: 800px;
      margin: 0 auto;
      color: #555;
    }

    /* Contact Section */
    .contact {
      padding: 100px 10%;
      text-align: center;
      background-color: rgba(255, 255, 255, 0.9);
      position: relative;
      z-index: 1;
    }
    .contact h2 {
      font-size: 36px;
      margin-bottom: 40px;
      color: #6a11cb;
    }
    .contact form {
      max-width: 600px;
      margin: 0 auto;
      display: flex;
      flex-direction: column;
      gap: 20px;
    }
    .contact form input,
    .contact form textarea {
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
      transition: border-color 0.3s ease;
    }
    .contact form input:focus,
    .contact form textarea:focus {
      border-color: #6a11cb;
    }
    .contact form .submit-btn {
      padding: 12px 24px;
      background-color: #6a11cb;
      color: #fff;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    .contact form .submit-btn:hover {
      transform: translateY(-3px);
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    /* Footer */
    .footer {
      padding: 20px 10%;
      text-align: center;
      background-color: rgba(106, 17, 203, 0.9);
      color: #fff;
      position: relative;
      z-index: 1;
    }
    .footer .social-links {
      margin-top: 10px;
    }
    .footer .social-links a {
      color: #fff;
      margin: 0 10px;
      font-size: 20px;
      transition: color 0.3s ease;
    }
    .footer .social-links a:hover {
      color: #2575fc;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      /* .navbar {
        flex-direction: column;
        align-items: flex-start;
      } */
      .hero {
        flex-direction: column;
        text-align: center;
      }
      .hero-content {
        max-width: 100%;
      }
      .feature-cards {
        flex-direction: column;
        align-items: center;
      }
    }
    /* Updated Color Scheme */
    :root {
/* 
      --primary: #4F46E5;
    --secondary: #000000;
    --accent: #EC4899;
    --dark: #1E293B;
    --light:Â #3c4650; */
    --primary: #e900ff;
    --secondary: #2c5699;
    --accent: #EC4899;
    --dark: #1E293B;
    --light: #3c4650;
    }
/* 
    --primary: #4F46E5;    /* Indigo */
      /* --secondary: #06B6D4;  Teal */
      /* --accent: #EC4899;     Pink */
      /* --dark: #1E293B;       Dark Slate */
      /* --light: #F8FAFC;      Light Gray */ */

    /* Dynamic Background Animation */
    .dynamic-bg {
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      animation: gradientShift 15s ease infinite;
    }

    /* Floating Particles Animation */
    .particles {
      position: fixed;
      width: 100%;
      height: max-content;
      z-index: -1;
      pointer-events: none;
    }

    .particle {
      position: absolute;
      /* background: rgba(0, 0, 0, 0.1); */
      background: #00000058;
      border-radius: 50%;
      animation: float 10s infinite linear;
      box-shadow: 0.2rem 0.2rem 10px black;
    }

    @keyframes float {
      0% { transform: translateY(100vh) scale(0); }
      100% { transform: translateY(-100vh) scale(1); }
    }

    /* Navigation Bar */
    /* .navbar {
      background-color: rgba(79, 70, 229, 0.95);
    } */

    /* .navbar .nav-links a:hover {
      background-color: var(--light);
      color: var(--primary);
    } */

    /* Hero Section Enhancements */
    .hero {
        background: linear-gradient(76deg, #1d2223 20%, transparent);
        /* background: linear-gradient(45deg, rgba(248, 250, 252, 0.95) 60%, transparent); */
      position: relative;
      overflow: hidden;
    }

    .hero-image {
      position: relative;
      border-radius: 16px;
      overflow: hidden;
      box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
    }

    .hero-image::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(45deg, var(--primary), var(--secondary));
      opacity: 0.1;
      z-index: 1;
    }

    /* Feature Cards Enhancements */
    .card {
      background: rgba(255, 255, 255, 0.95);
      border: 1px solid rgba(203, 213, 225, 0.3);
      backdrop-filter: blur(10px);
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      background: rgba(255, 255, 255, 0.95);
    background: linear-gradient(48deg, #4b494f 40%, transparent);
    border: 1px solid rgba(203, 213, 225, 0.3);
    backdrop-filter: blur(10px);
    transition: all 0.3scubic-bezier(0.4, 0, 0.2, 1);
    color: white;
    background: linear-gradient(45deg, #4b4261 50%, transparent);
    }

    
    .card:hover {
      transform: translateY(-8px);
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
    }

    .card i {
      background: linear-gradient(45deg, var(--primary), var(--secondary));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;

    }

    /* Contact Form Enhancements */
    .contact form input,
    .contact form textarea {
      background: rgba(255, 255, 255, 0.9);
      transition: all 0.3s ease;
    }

    .contact form input:focus,
    .contact form textarea:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2);
    }

    /* Animated Buttons */
    .btn {
      position: relative;
      overflow: hidden;
      transition: all 0.3s ease;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.2), transparent);
      transform: rotate(45deg);
      transition: all 0.5s ease;
    }

    .btn:hover::before {
      left: 50%;
    }

    /* Responsive Enhancements */
    @media (max-width: 768px) {
      .hero {
        padding: 100px 5%;
        text-align: center;
      }
      
      .hero-content h1 {
        font-size: 36px;
      }
      
      .hero-image {
        margin-top: 40px;
        max-width: 100%;
      }
    }

    
    /* Role Selection Panel */
    .role-panel {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: white;
        padding: 2rem;
        border-radius: 10px;
        box-shadow: 0 0 20px rgba(0,0,0,0.2);
        z-index: 2000;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        max-width: 400px;
        width: 90%;
    }

    .role-panel.active {
        opacity: 1;
        visibility: visible;
    }

    .role-option {
        width: 100%;
        padding: 1rem;
        margin: 0.5rem 0;
        background: #6a11cb;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        transition: transform 0.2s ease;
    }

    .role-option:hover {
        background: #5706d4;
        transform: translateY(-2px);
    }

    .overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.5);
        backdrop-filter: blur(3px);
        z-index: 1999;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }

    .overlay.active {
        opacity: 1;
        visibility: visible;
    }
    .modal1{
    position: fixed;
    width: 50%;

    height: 55%;
    left: 25%;
    top: 30%;
    z-index: 2;
    display: none;
  }
  .modal1 > .modal-content1{
    
    /* background: linear-gradient(45deg, var(--primary), var(--secondary));
     */
     background: linear-gradient(116deg, #807382, #432c99);
    color: #ffffff;
    border-radius: 10px;
    border: 1px solid rgba(0, 0, 0, 0.336);
    display: flex;
    flex-direction: column;
    width: 100%;
    padding-bottom:0.25rem ;
    box-shadow: inset 0 0 0.25rem rgb(255, 255, 255);
    height: max-content;
  }
  .modal-content1 > button{
    background: linear-gradient(to right,#6a11cb,rgb(98, 90, 90));
    border-radius: 5px;
    margin: 20px;
    color: white;
    padding: 1.25% 0 ;
    font-size: 1.5em;
  }
  #pb:hover{
   background: linear-gradient(145deg,rgb(96, 54, 158),#6a11cb);
    color: whitesmoke;
  }
  .modal-content1 > p{
    font-weight: bold;
    text-align: center;
    text-shadow: 2px 2px 3px rgb(112, 112, 112);
    /* font-size: 24pt; */
    padding-top: 50px;
  }
  .close1{
    position: absolute;
    right: 1rem;
    border: none;
    background-color: transparent;
    color: white;
font-size: 2em;
    font-weight: bold;
  }
  .close1:hover{
    color: rgb(45, 38, 59);
    transition: all ease 150ms;
    cursor: pointer;
    scale: 1.5;
    /* background-color: rgb(250, 100, 100); */
  }
  @layer utilities {
  .text-gradient {
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
}

  </style>

</head>
<body>
  <div id="loginRoleModal" class="modal1">
    <div class="modal-content1">
      <span ><button class="close1" >&times;</button></span>
      <p>Login As:</p>
      <button id="pb" onclick="location.href='slogin'">Student</button>
      <button id="pb" onclick="location.href='flogin'">Faculty</button>
      <button id="pb" onclick="location.href='adminLogin'">Admin</button>
    </div> 
  </div>
  <!-- Add Particles Animation -->
  <div class="particles">
    <div class="particle" style="left: 10%; width: 100px; height: 100px; animation-delay: 0s"></div>
    <div class="particle" style="left: 30%; width: 25px; height: 25px; animation-delay: 0s"></div>
    <div class="particle" style="left: 50%; width: 75px; height: 75px; animation-delay: 0s"></div>
    <div class="particle" style="left: 70%; width: 30px; height: 30px; animation-delay: 0s"></div>
    <div class="particle" style="left: 90%; width: 80px; height: 70px; animation-delay: 0s"></div>
 
    <div class="particle" style="left: 50%; width: 50px; height: 50px; animation-delay: 2s"></div>
    <div class="particle" style="left: 40%; width: 100px; height: 100px; animation-delay: 2s"></div>
    <div class="particle" style="left: 60%; width: 75px; height: 70px; animation-delay: 2s"></div>
    <div class="particle" style="left: 20%; width: 105px; height: 90px; animation-delay: 04s"></div>
    <div class="particle" style="left: 78%; width: 80px; height: 70px; animation-delay: 4s"></div>
    <div class="particle" style="left: 20%; width: 100px; height: 90px; animation-delay: 6s"></div>
    <div class="particle" style="left: 10%; width: 70px; height: 50px; animation-delay: 6s"></div>
    <div class="particle" style="left: 70%; width: 75px; height: 75px; animation-delay: 6s"></div>
    <div class="particle" style="left: 65%; width: 30px; height: 30px; animation-delay: 2s"></div>
    <div class="particle" style="left: 80%; width: 80px; height: 70px; animation-delay: 5s"></div>
  
</div>

  <!-- Rest of the body content remains the same -->


  <!-- Dynamic Background -->
  <div class="dynamic-bg"></div>

  <!-- Navigation Bar -->
  <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
    <div class="container">
      <a class="navbar-brand fw-bold text logo" href="/">TutorFlow</a>
      <button
        class="navbar-toggler"
        type="button"
        data-bs-toggle="collapse"
        data-bs-target="#navbarNav"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ms-auto nav-links">
          <li class="nav-item">
            <a class="nav-link text" href="#home">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link text" href="#features">Features</a>
          </li>
          <li class="nav-item">
            <a class="nav-link text" href="#about">About</a>
          </li>
          <li class="nav-item">
            <a class="nav-link text" href="#contact">Contact</a>
          </li>
        </ul>
        <div class="auth-buttons">
          <button class="btn login-btn btn-primary ms-3" id="loginbtn">Login</button>
     
          <a href="/signup" class="btn signup-btn">Sign Up</a>

        </div>
      </div>
    </div>
  </nav>

  <!-- Hero Section -->
  <section id="home" class="hero">
    <div class="hero-content">
      <h1 >Welcome to TutorFlow</h1>
      <p>
        Your gateway to seamless student-teacher appointments. TutorFlow simplifies
        scheduling, tracking, and managing your academic progress with ease.
      </p>
      <a class="btn cta-btn" id="getStartedBtn" >Get Started</a>
    </div>
    <div class="hero-image">
      <!-- Replace with your own image or an illustration -->
      <img src="../uploads/tutorflow-img.webp" style="height: 300px" alt="TutorFlow Illustration" />
      <!-- <img src="../heroimg.png" style="height: 300px" alt="TutorFlow Illustration" /> -->
   
    </div>

  </section>

  <!-- Features Section -->
  <section id="features" class="features">
    <h2>Features</h2>
    <div class="feature-cards">
      <!-- You can add custom classes for different directions: animate-from-left / animate-from-right / animate-from-bottom -->
      <div class="card animate-from-left">
        <i class="fas fa-calendar-alt"></i>
        <h3>Easy Scheduling</h3>
        <p>Book appointments with your teachers effortlessly.</p>
      </div>
      <div class="card animate-from-right">
        <i class="fas fa-bell"></i>
        <h3>Reminders</h3>
        <p>Get timely reminders for your upcoming appointments.</p>
      </div>
      <div class="card animate-from-left">
        <i class="fas fa-chart-line"></i>
        <h3>Progress Tracking</h3>
        <p>Track your academic progress with detailed reports.</p>
      </div>
      <div class="card animate-from-right">
        <i class="fas fa-comments"></i>
        <h3>Live Chat</h3>
        <p>Communicate with your teachers in real-time.</p>
      </div>
      <div class="card animate-from-left">
        <i class="fas fa-file-alt"></i>
        <h3>Resource Sharing</h3>
        <p>Share and access study materials easily.</p>
      </div>
      <div class="card animate-from-right">
        <i class="fas fa-star"></i>
        <h3>Feedback System</h3>
        <p>Provide and receive feedback for continuous improvement.</p>
      </div>
    </div>
  </section>

  <!-- About Section -->
  <section id="about" class="about">
    <h2>About TutorFlow</h2>
    <p>
      TutorFlow is a student-teacher appointment management system designed to
      simplify the process of scheduling and managing appointments. Our platform
      ensures seamless communication between students and teachers, helping you
      achieve your academic goals.
    </p>
  </section>

  <!-- Contact Section -->
  <section id="contact" class="contact">
    <h2>Contact Us</h2>
    <form id="contact-form">
      <input type="text" id="name" placeholder="Your Name" required />
      <input type="email" id="email" placeholder="Your Email" required />
      <textarea id="message" rows="5" placeholder="Your Message" required></textarea>
      <button type="submit" class="btn submit-btn">Send Message</button>
    </form>
  </section>

  <!-- Footer -->
  <footer class="footer">
    <p>&copy; 2025 TutorFlow. All rights reserved.</p>
    <div class="social-links">
      <a href="#"><i class="fab fa-facebook"></i></a>
      <a href="#"><i class="fab fa-twitter"></i></a>
      <a href="#"><i class="fab fa-instagram"></i></a>
      <a href="#"><i class="fab fa-linkedin"></i></a>
    </div>
  </footer>

  <!-- Scripts -->


  <script>


    // Smooth scrolling for navigation links
    document.querySelectorAll(".nav-links a").forEach((anchor) => {
      anchor.addEventListener("click", function (e) {
        e.preventDefault();
        document.querySelector(this.getAttribute("href")).scrollIntoView({
          behavior: "smooth",
        });
      });
    });

    // Form submission handling
    document.getElementById("contact-form").addEventListener("submit", function (e) {
      e.preventDefault();
      alert("Thank you for contacting us! We will get back to you soon.");
      this.reset();
    });

    // Intersection Observer for Feature Cards with repeated animations
    const cards = document.querySelectorAll(".card");
    const options = {
      threshold: 0.5, // Trigger when 20% of the card is visible
    };

    const observer = new IntersectionObserver((entries, obs) => {
      entries.forEach((entry) => {
        const targetCard = entry.target;
        if (entry.isIntersecting) {
          // Add 'visible' class to animate card in
          targetCard.classList.add("visible");
        } else {
          // Remove 'visible' class to reset the card if you want repeated animations
          targetCard.classList.remove("visible");
        }
      });
    }, options);

    cards.forEach((card) => {
      observer.observe(card);
    });
    

// Add parallax effect to particles
    document.addEventListener('mousemove', (e) => {
      const particles = document.querySelectorAll('.particle');
      const mouseX = e.clientX;
      const mouseY = e.clientY;
      
      particles.forEach(particle => {
        const speed = 30;
        const x = (mouseX - window.innerWidth/2) / speed;
        const y = (mouseY - window.innerHeight/2) / speed;
        
        particle.style.transform = `translate(${x}px, ${y}px)`;
      });
    });

    // Add scroll-based animations
    window.addEventListener('scroll', () => {
      const scrolled = window.pageYOffset;
      document.querySelector('.dynamic-bg').style.transform = `translateY(${scrolled * 0.5}px)`;
    });



    const loginbtn=document.querySelector("#loginbtn");
const formlogin=document.querySelector("#loginRoleModal")
loginbtn.addEventListener("click",(eve)=>{
formlogin.style.display="flex";
})
const crossbtn=document.querySelector(".close1");
crossbtn.addEventListener("click",()=>{
formlogin.style.display="none";
    
})
// Get modal and button elements
const getStartedBtn = document.getElementById('getStartedBtn');
const closeBtn = document.querySelector('.close1');

// Open modal on "Get Started" button click
getStartedBtn.addEventListener('click', () => {
  loginRoleModal.style.display = 'flex'; // Show the modal
});

// Close modal on clicking the close button
closeBtn.addEventListener('click', () => {
  loginRoleModal.style.display = 'none'; // Hide the modal
});

// Close modal on clicking outside the modal content
document.addEventListener("click",(event)=>{
if(loginRoleModal.style.display=='flex'){
if(!(event.target.classList.contains("modal1"))){
    // loginRoleModal.style.display='none';
}
}
})
const cssLinks = document.querySelectorAll('link[rel="stylesheet"]');
  cssLinks.forEach(link => {
    link.onerror = () => {
      console.error(`CSS failed to load: ${link.href}`);
      // Implement fallback logic here
    };
  });

  </script>
  <script src="js/bootstrap.bundle.min.js"></script>

</body>
</html>